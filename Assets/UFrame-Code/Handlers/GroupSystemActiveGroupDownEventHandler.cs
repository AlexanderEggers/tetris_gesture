// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace TetrisDB {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using TetrisDB;
    using uFrame.ECS;
    using uFrame.Kernel;
    using UnityEngine;
    
    
    public class GroupSystemActiveGroupDownEventHandler {
        
        public GroupComponent Group;
        
        private TetrisDB.ActiveGroupDownEvent _Event;
        
        private uFrame.ECS.EcsSystem _System;
        
        private bool ActionNode61_value = default( System.Boolean );
        
        private TetrisDB.GroupComponent ActionNode62_component = default( TetrisDB.GroupComponent );
        
        private bool BoolNode33 = false;
        
        private TetrisDB.GroupShouldSpawnEvent PublishEventNode34_Result = default( TetrisDB.GroupShouldSpawnEvent );
        
        private object ActionNode123_message = default( System.Object );
        
        private string StringNode124 = "move down";
        
        public TetrisDB.ActiveGroupDownEvent Event {
            get {
                return _Event;
            }
            set {
                _Event = value;
            }
        }
        
        public uFrame.ECS.EcsSystem System {
            get {
                return _System;
            }
            set {
                _System = value;
            }
        }
        
        public virtual System.Collections.IEnumerator Execute() {
            ActionNode61_value = Group.isActive;
            // ActionNode
            while (this.DebugInfo("47a3ddfd-a596-4bbc-a393-65247444076c","4de3e048-ca66-4a45-9aa1-25a070acd515", this) == 1) yield return null;
            // Visit uFrame.Actions.Comparisons.IsTrue
            uFrame.Actions.Comparisons.IsTrue(ActionNode61_value, ()=> { System.StartCoroutine(ActionNode61_yes()); }, ()=> { System.StartCoroutine(ActionNode61_no()); });
            ActionNode123_message = StringNode124;
            // ActionNode
            while (this.DebugInfo("07bbc684-5d71-4a13-bed3-85b36cb8a326","d3c2b90e-db35-4915-8fcb-8daaeb4e206e", this) == 1) yield return null;
            // Visit uFrame.Actions.DebugLibrary.LogMessage
            uFrame.Actions.DebugLibrary.LogMessage(ActionNode123_message);
            yield break;
        }
        
        private System.Collections.IEnumerator ActionNode62_yes() {
            // SetVariableNode
            while (this.DebugInfo("fbc0865e-3e1d-4bcc-a6e3-e77a4f5ddd06","622f14df-f20a-41fd-aacb-8fde23e6e744", this) == 1) yield return null;
            Group.isActive = (System.Boolean)BoolNode33;
            // PublishEventNode
            while (this.DebugInfo("622f14df-f20a-41fd-aacb-8fde23e6e744","07bbc684-5d71-4a13-bed3-85b36cb8a326", this) == 1) yield return null;
            var PublishEventNode34_Event = new GroupShouldSpawnEvent();
            System.Publish(PublishEventNode34_Event);
            PublishEventNode34_Result = PublishEventNode34_Event;
            yield break;
        }
        
        private System.Collections.IEnumerator ActionNode62_no() {
            yield break;
        }
        
        private System.Collections.IEnumerator ActionNode61_yes() {
            ActionNode62_component = this.Group;
            // ActionNode
            while (this.DebugInfo("4de3e048-ca66-4a45-9aa1-25a070acd515","fbc0865e-3e1d-4bcc-a6e3-e77a4f5ddd06", this) == 1) yield return null;
            // Visit TetrisUtils.Update
            TetrisUtils.Update(ActionNode62_component, ()=> { System.StartCoroutine(ActionNode62_yes()); }, ()=> { System.StartCoroutine(ActionNode62_no()); });
            yield break;
        }
        
        private System.Collections.IEnumerator ActionNode61_no() {
            yield break;
        }
    }
}
