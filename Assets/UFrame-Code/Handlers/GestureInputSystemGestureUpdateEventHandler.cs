// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace TetrisDB {
    using Leap;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using uFrame.Kernel;
    using UnityEngine;
    
    
    public class GestureInputSystemGestureUpdateEventHandler {
        
        private TetrisDB.GestureUpdateEvent _Event;
        
        private uFrame.ECS.EcsSystem _System;
        
        private int ActionNode127_Milliseconds = default( System.Int32 );
        
        private int IntNode83 = 500;
        
        private uFrame.Actions.MillitTimer ActionNode127 = new uFrame.Actions.MillitTimer();
        
        private TetrisDB.GestureUpdateEvent PublishEventNode84_Result = default( TetrisDB.GestureUpdateEvent );
        
        private Leap.Frame ActionNode74_Result = default( Leap.Frame );
        
        private Leap.Frame ActionNode75_frame = default( Leap.Frame );
        
        private Leap.Hand ActionNode75_left = default( Leap.Hand );
        
        private object ActionNode76_toCheck = default( System.Object );
        
        private object ActionNode118_message = default( System.Object );
        
        private string StringNode101 = "hand not visible";
        
        private object ActionNode77_key = default( System.Object );
        
        private int IntNode85 = 0;
        
        private Leap.Hand ActionNode77_hand = default( Leap.Hand );
        
        private TetrisDB.ActiveGroupMoveLeftEvent PublishEventNode79_Result = default( TetrisDB.ActiveGroupMoveLeftEvent );
        
        private object ActionNode119_key = default( System.Object );
        
        private int IntNode102 = 1;
        
        private Leap.Hand ActionNode119_hand = default( Leap.Hand );
        
        private TetrisDB.ActiveGroupMoveRightEvent PublishEventNode115_Result = default( TetrisDB.ActiveGroupMoveRightEvent );
        
        private object ActionNode95_key = default( System.Object );
        
        private int IntNode96 = 2;
        
        private Leap.Hand ActionNode95_hand = default( Leap.Hand );
        
        private TetrisDB.ActiveGroupRotateEvent PublishEventNode116_Result = default( TetrisDB.ActiveGroupRotateEvent );
        
        private object ActionNode120_key = default( System.Object );
        
        private int IntNode103 = 3;
        
        private Leap.Hand ActionNode120_hand = default( Leap.Hand );
        
        private TetrisDB.ActiveGroupDownEvent PublishEventNode117_Result = default( TetrisDB.ActiveGroupDownEvent );
        
        public TetrisDB.GestureUpdateEvent Event {
            get {
                return _Event;
            }
            set {
                _Event = value;
            }
        }
        
        public uFrame.ECS.EcsSystem System {
            get {
                return _System;
            }
            set {
                _System = value;
            }
        }
        
        public virtual System.Collections.IEnumerator Execute() {
            ActionNode127_Milliseconds = IntNode83;
            // ActionNode
            while (this.DebugInfo("e3f5e492-b904-4a14-8c5a-b773be0bbca3","d9eb14db-b5db-40c3-bd01-a36f90258104", this) == 1) yield return null;
            // Visit uFrame.Actions.MillitTimer
            ActionNode127.Milliseconds = ActionNode127_Milliseconds;
            ActionNode127.System = System;
            ActionNode127.Complete = ()=> { System.StartCoroutine(ActionNode127_Complete()); };
            ActionNode127.Execute();
            // ActionNode
            while (this.DebugInfo("9fe12bc1-ff95-4ca9-87af-04bf3d20f34d","730a328a-620a-408f-b020-1ec2c12ed328", this) == 1) yield return null;
            // Visit FrameUtils.getFrame
            ActionNode74_Result = FrameUtils.getFrame();
            ActionNode75_frame = ActionNode74_Result;
            // ActionNode
            while (this.DebugInfo("730a328a-620a-408f-b020-1ec2c12ed328","b83a3922-04bf-45ae-86ef-4cf556cad129", this) == 1) yield return null;
            // Visit FrameUtils.getLeftHandFromFrame
            FrameUtils.getLeftHandFromFrame(ActionNode75_frame, out ActionNode75_left);
            ActionNode76_toCheck = ActionNode75_left;
            // ActionNode
            while (this.DebugInfo("b83a3922-04bf-45ae-86ef-4cf556cad129","222aae32-7144-4f27-8cfc-34f6ccaad846", this) == 1) yield return null;
            // Visit ConditionsUtils.isNull
            ConditionsUtils.isNull(ActionNode76_toCheck, ()=> { System.StartCoroutine(ActionNode76_yes()); }, ()=> { System.StartCoroutine(ActionNode76_no()); });
            yield break;
        }
        
        private System.Collections.IEnumerator ActionNode127_Complete() {
            // PublishEventNode
            while (this.DebugInfo("d9eb14db-b5db-40c3-bd01-a36f90258104","9fe12bc1-ff95-4ca9-87af-04bf3d20f34d", this) == 1) yield return null;
            var PublishEventNode84_Event = new GestureUpdateEvent();
            System.Publish(PublishEventNode84_Event);
            PublishEventNode84_Result = PublishEventNode84_Event;
            yield break;
        }
        
        private System.Collections.IEnumerator ActionNode76_yes() {
            ActionNode118_message = StringNode101;
            // ActionNode
            while (this.DebugInfo("222aae32-7144-4f27-8cfc-34f6ccaad846","1120e85c-6d10-419f-b9e2-7492e2f690a4", this) == 1) yield return null;
            // Visit uFrame.Actions.DebugLibrary.LogMessage
            uFrame.Actions.DebugLibrary.LogMessage(ActionNode118_message);
            yield break;
        }
        
        private System.Collections.IEnumerator ActionNode77_yes() {
            // PublishEventNode
            while (this.DebugInfo("2e85193b-7f96-4150-a0cd-ed5a3e0a5015","b650c064-1158-4d64-b429-56d62b2c1f71", this) == 1) yield return null;
            var PublishEventNode79_Event = new ActiveGroupMoveLeftEvent();
            System.Publish(PublishEventNode79_Event);
            PublishEventNode79_Result = PublishEventNode79_Event;
            yield break;
        }
        
        private System.Collections.IEnumerator ActionNode119_yes() {
            // PublishEventNode
            while (this.DebugInfo("2e1347d4-50a6-40e2-9e29-0a555be53310","6c87a3da-3586-409b-ab68-3f56ce6f1348", this) == 1) yield return null;
            var PublishEventNode115_Event = new ActiveGroupMoveRightEvent();
            System.Publish(PublishEventNode115_Event);
            PublishEventNode115_Result = PublishEventNode115_Event;
            yield break;
        }
        
        private System.Collections.IEnumerator ActionNode95_yes() {
            // PublishEventNode
            while (this.DebugInfo("26fa5271-6740-4e31-8e9e-96efd3c4abe4","0f6a65f9-97c5-4c04-b607-69895038ff3a", this) == 1) yield return null;
            var PublishEventNode116_Event = new ActiveGroupRotateEvent();
            System.Publish(PublishEventNode116_Event);
            PublishEventNode116_Result = PublishEventNode116_Event;
            yield break;
        }
        
        private System.Collections.IEnumerator ActionNode120_yes() {
            // PublishEventNode
            while (this.DebugInfo("21f82ff7-ca5e-455f-9bec-36e5f5254592","c4db65f6-2521-4ee9-96de-74990e6603b8", this) == 1) yield return null;
            var PublishEventNode117_Event = new ActiveGroupDownEvent();
            System.Publish(PublishEventNode117_Event);
            PublishEventNode117_Result = PublishEventNode117_Event;
            yield break;
        }
        
        private System.Collections.IEnumerator ActionNode120_no() {
            yield break;
        }
        
        private System.Collections.IEnumerator ActionNode95_no() {
            ActionNode120_key = IntNode103;
            ActionNode120_hand = ActionNode75_left;
            // ActionNode
            while (this.DebugInfo("0f6a65f9-97c5-4c04-b607-69895038ff3a","21f82ff7-ca5e-455f-9bec-36e5f5254592", this) == 1) yield return null;
            // Visit GestureUtils.isGestureSatisified
            GestureUtils.isGestureSatisified(ActionNode120_key, ActionNode120_hand, ()=> { System.StartCoroutine(ActionNode120_yes()); }, ()=> { System.StartCoroutine(ActionNode120_no()); });
            yield break;
        }
        
        private System.Collections.IEnumerator ActionNode119_no() {
            ActionNode95_key = IntNode96;
            ActionNode95_hand = ActionNode75_left;
            // ActionNode
            while (this.DebugInfo("6c87a3da-3586-409b-ab68-3f56ce6f1348","26fa5271-6740-4e31-8e9e-96efd3c4abe4", this) == 1) yield return null;
            // Visit GestureUtils.isGestureSatisified
            GestureUtils.isGestureSatisified(ActionNode95_key, ActionNode95_hand, ()=> { System.StartCoroutine(ActionNode95_yes()); }, ()=> { System.StartCoroutine(ActionNode95_no()); });
            yield break;
        }
        
        private System.Collections.IEnumerator ActionNode77_no() {
            ActionNode119_key = IntNode102;
            ActionNode119_hand = ActionNode75_left;
            // ActionNode
            while (this.DebugInfo("b650c064-1158-4d64-b429-56d62b2c1f71","2e1347d4-50a6-40e2-9e29-0a555be53310", this) == 1) yield return null;
            // Visit GestureUtils.isGestureSatisified
            GestureUtils.isGestureSatisified(ActionNode119_key, ActionNode119_hand, ()=> { System.StartCoroutine(ActionNode119_yes()); }, ()=> { System.StartCoroutine(ActionNode119_no()); });
            yield break;
        }
        
        private System.Collections.IEnumerator ActionNode76_no() {
            ActionNode77_key = IntNode85;
            ActionNode77_hand = ActionNode75_left;
            // ActionNode
            while (this.DebugInfo("1120e85c-6d10-419f-b9e2-7492e2f690a4","2e85193b-7f96-4150-a0cd-ed5a3e0a5015", this) == 1) yield return null;
            // Visit GestureUtils.isGestureSatisified
            GestureUtils.isGestureSatisified(ActionNode77_key, ActionNode77_hand, ()=> { System.StartCoroutine(ActionNode77_yes()); }, ()=> { System.StartCoroutine(ActionNode77_no()); });
            yield break;
        }
    }
}
