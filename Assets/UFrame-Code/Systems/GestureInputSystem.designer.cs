// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace TetrisDB {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using TetrisDB;
    using uFrame.ECS;
    using uFrame.Kernel;
    using UniRx;
    using UnityEngine;
    
    
    public partial class GestureInputSystemBase : uFrame.ECS.EcsSystem, uFrame.ECS.ISystemUpdate {
        
        private IEcsComponentManagerOf<GroupComponent> _GroupComponentManager;
        
        private IEcsComponentManagerOf<SpawnComponent> _SpawnComponentManager;
        
        public IEcsComponentManagerOf<GroupComponent> GroupComponentManager {
            get {
                return _GroupComponentManager;
            }
            set {
                _GroupComponentManager = value;
            }
        }
        
        public IEcsComponentManagerOf<SpawnComponent> SpawnComponentManager {
            get {
                return _SpawnComponentManager;
            }
            set {
                _SpawnComponentManager = value;
            }
        }
        
        public override void Setup() {
            base.Setup();
            GroupComponentManager = ComponentSystem.RegisterComponent<GroupComponent>(3);
            SpawnComponentManager = ComponentSystem.RegisterComponent<SpawnComponent>(1);
            this.OnEvent<uFrame.Kernel.GameReadyEvent>().Subscribe(_=>{ GestureInputSystemGameReadyFilter(_); }).DisposeWith(this);
            this.OnEvent<TetrisDB.GestureUpdateEvent>().Subscribe(_=>{ GestureInputSystemGestureUpdateEventFilter(_); }).DisposeWith(this);
        }
        
        protected virtual void GestureInputSystemUpdateHandler() {
            var handler = new GestureInputSystemUpdateHandler();
            handler.System = this;
            StartCoroutine(handler.Execute());
        }
        
        protected void GestureInputSystemUpdateFilter() {
            this.GestureInputSystemUpdateHandler();
        }
        
        public virtual void SystemUpdate() {
            GestureInputSystemUpdateFilter();
        }
        
        protected virtual void GestureInputSystemGameReadyHandler(uFrame.Kernel.GameReadyEvent data) {
            var handler = new GestureInputSystemGameReadyHandler();
            handler.System = this;
            handler.Event = data;
            StartCoroutine(handler.Execute());
        }
        
        protected void GestureInputSystemGameReadyFilter(uFrame.Kernel.GameReadyEvent data) {
            this.GestureInputSystemGameReadyHandler(data);
        }
        
        protected virtual void GestureInputSystemGestureUpdateEventHandler(TetrisDB.GestureUpdateEvent data) {
            var handler = new GestureInputSystemGestureUpdateEventHandler();
            handler.System = this;
            handler.Event = data;
            StartCoroutine(handler.Execute());
        }
        
        protected void GestureInputSystemGestureUpdateEventFilter(TetrisDB.GestureUpdateEvent data) {
            this.GestureInputSystemGestureUpdateEventHandler(data);
        }
    }
    
    [uFrame.Attributes.uFrameIdentifier("20b954d6-b95e-4d7b-a866-79c986d18003")]
    public partial class GestureInputSystem : GestureInputSystemBase {
        
        private static GestureInputSystem _Instance;
        
        public GestureInputSystem() {
            Instance = this;
        }
        
        public static GestureInputSystem Instance {
            get {
                return _Instance;
            }
            set {
                _Instance = value;
            }
        }
    }
}
